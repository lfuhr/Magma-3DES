load "tripledes.magma";
load "Hilfsfunktionen.mg";
load "helpers.magma";


K_hex := "0123456789ABCDEF"; K := hex_to_bitvector(K_hex);
P_hex := "4E6F772069732074"; P := hex_to_bitvector(P_hex);
C_hex := "3FA40E8A984D4815"; C := hex_to_bitvector(C_hex);


// Fuhr: Auskommentierte Funktionsaufrufe

// Des using Vectors of book
c := enc_DES( P, K );
"Plaintext:"; P_hex;
"Chiffrat:"; bitvector_to_hex( c );
"Plaintext again:"; bitvector_to_hex( dec_DES( c, K ) );

// // Triple Des
// V64:= VectorSpace(GF(2), 64);
// K1 := Random(V64); K2 := Random(V64); K3 := Random(V64);
// c := enc_triple_DES(P, K1, K2, K3);
// "Chiffrat:"; bitvector_to_hex( c );
// "Plaintext:"; bitvector_to_hex( dec_triple_DES( c, K1, K2, K3 ) );

// // OpenSSL DES
// p := Random(VectorSpace(GF(2), 64));
// p_hex := bitvector_to_hex(p);
// k := Random(VectorSpace(GF(2), 64));
// k_hex := bitvector_to_hex(k);
// c := enc_DES_openSSL(p_hex, k_hex);
// c := IntegerToString(StringToInteger(c, 16), 16); // Uppercase
// c1 := enc_DES( p, k );
// bitvector_to_hex(c1); c;

// // OpenSSL DES as special case of 3DES
// c := enc_triple_DES_openSSL(P_hex, K_hex cat K_hex cat K_hex);
// c;