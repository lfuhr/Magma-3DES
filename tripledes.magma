// load "file_read.magma";
load "tables.magma";

function invert_permutation(perm)
	inverse := [1..#perm];
	for i in [1..#perm] do
		inverse[perm[i]] := i;
	end for;
	return inverse;
end function;

IP_inverse := invert_permutation(IP);
// 1823743426 eq permute_integer(permute_integer(1823743426, IP),IP_inverse);

function enc_triple_DES()
end function;

function dec_triple_DES()
end function;

function enc_DES(input)
end function;

function dec_DES(input)
end function;

function cipher_function()
end function;

function split_data()
end function;

function concatenate_data()
end function;

// Fuhr
function permute_integer(n, perm)
	r := 0;
	for i in [1..#perm] do
		if BitwiseAnd(n, 2^(#perm - i)) ne 0 then
			r +:= 2^(perm[i] - 1);
		end if;
	end for;
	return r;
end function;
// permute_integer(StringToInteger("1000000000000000000000000", 2), IP); // -> 1