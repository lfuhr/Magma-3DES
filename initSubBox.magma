// Kolodziej Marco

initSubBox:= function(temp)
	K:=FiniteField(2);
	V4:=VectorSpace(K, 4);
	V2:=VectorSpace(K, 2);
	S1:=AssociativeArray();

	statement_col_num:=[i:i in [0..15]];
	statement_row_num:=[i:i in [0..3]];

	i:=1;
	
	for r in [1..4] do

		R:=AssociativeArray();
		while (i mod 16) ne 0 do
			statement_col:=V4!Reverse(Intseq(statement_col_num[i-(r-1)*16], 2, 4)); 
			// Das eigtl. Element wird nicht als Element aus V4 zurueck gegeben, da
			// dieses im weiteren Verlauf noch Konkatiniert wird.
			R[statement_col]:=Reverse(Intseq(temp[i], 2, 4));
			// R[statement_col]:=V4!Reverse(Intseq(temp[i], 2, 4));
			i:=i+1;
		end while;
		statement_col:=V4!Reverse(Intseq(statement_col_num[i-(r-1)*16], 2, 4));
		// Auch hier gilt die gleiche Argumentation wie in der while-Schleife.
		R[statement_col]:=Reverse(Intseq(temp[i], 2, 4));
		//R[statement_col]:=V4!Reverse(Intseq(temp[i], 2, 4));
		
		statement_row:=V2!Reverse(Intseq(statement_row_num[r], 2, 2));
		S1[statement_row]:=R;
		
		i:=i+1;
	
	end for;

	return S1;
end function;